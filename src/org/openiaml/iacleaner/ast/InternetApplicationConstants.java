/* Generated By:JJTree&JavaCC: Do not edit this line. InternetApplicationConstants.java */
package org.openiaml.iacleaner.ast;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface InternetApplicationConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ECHO_STATEMENT = 21;
  /** RegularExpression Id. */
  int FUNCTION_STATEMENT = 22;
  /** RegularExpression Id. */
  int RETURN_STATEMENT = 23;
  /** RegularExpression Id. */
  int GLOBAL_STATEMENT = 24;
  /** RegularExpression Id. */
  int NEW_STATEMENT = 25;
  /** RegularExpression Id. */
  int VAR_STATEMENT = 26;
  /** RegularExpression Id. */
  int CLASS_STATEMENT = 27;
  /** RegularExpression Id. */
  int INTERFACE_STATEMENT = 28;
  /** RegularExpression Id. */
  int IMPLEMENTS_STATEMENT = 29;
  /** RegularExpression Id. */
  int EXTENDS_STATEMENT = 30;
  /** RegularExpression Id. */
  int ACCESS_MODIFIER = 31;
  /** RegularExpression Id. */
  int PHP_IF_STATEMENT = 32;
  /** RegularExpression Id. */
  int PHP_ELSE_STATEMENT = 33;
  /** RegularExpression Id. */
  int STRING = 34;
  /** RegularExpression Id. */
  int DECIMAL = 35;
  /** RegularExpression Id. */
  int HEXADECIMAL = 36;
  /** RegularExpression Id. */
  int PHP_BUILTIN = 37;
  /** RegularExpression Id. */
  int PHP_FUNCTION_NAME = 38;
  /** RegularExpression Id. */
  int PHP_SINGLE_COMMENT = 39;
  /** RegularExpression Id. */
  int PHP_MULTI_COMMENT = 40;
  /** RegularExpression Id. */
  int PHP_VARIABLE = 41;
  /** RegularExpression Id. */
  int PHP_OPERATOR = 42;
  /** RegularExpression Id. */
  int PHP_BLOCK_END = 43;
  /** RegularExpression Id. */
  int PHP_BLOCK_BEGIN = 44;
  /** RegularExpression Id. */
  int HTML_SCRIPT_TAG = 45;
  /** RegularExpression Id. */
  int HTML_SCRIPT_TAG_CLOSE = 46;
  /** RegularExpression Id. */
  int HTML_OPEN_TAG = 47;
  /** RegularExpression Id. */
  int HTML_CLOSE_TAG = 48;
  /** RegularExpression Id. */
  int HTML_CLOSING_TAG = 49;
  /** RegularExpression Id. */
  int HTML_TAG_NAME = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int HTML_ATTRIBUTE_NAME = 52;
  /** RegularExpression Id. */
  int HTML_STRING = 53;
  /** RegularExpression Id. */
  int HTML_ATTRIBUTE_EQUALS = 54;
  /** RegularExpression Id. */
  int HTML_TEXT_BLOCK = 55;
  /** RegularExpression Id. */
  int HTML_COMMENT_START = 56;
  /** RegularExpression Id. */
  int JS_FUNCTION_STATEMENT = 59;
  /** RegularExpression Id. */
  int JS_RETURN_STATEMENT = 60;
  /** RegularExpression Id. */
  int JS_NEW_STATEMENT = 61;
  /** RegularExpression Id. */
  int JS_VAR_STATEMENT = 62;
  /** RegularExpression Id. */
  int JS_IF_STATEMENT = 63;
  /** RegularExpression Id. */
  int JS_BRACKET_OPEN = 64;
  /** RegularExpression Id. */
  int JS_BRACKET_CLOSE = 65;
  /** RegularExpression Id. */
  int JS_BRACE_OPEN = 66;
  /** RegularExpression Id. */
  int JS_BRACE_CLOSE = 67;
  /** RegularExpression Id. */
  int JS_END = 68;
  /** RegularExpression Id. */
  int JS_EQUAL = 69;
  /** RegularExpression Id. */
  int JS_COMMA = 70;
  /** RegularExpression Id. */
  int JS_ELSE_STATEMENT = 71;
  /** RegularExpression Id. */
  int JS_STRING = 72;
  /** RegularExpression Id. */
  int JS_DECIMAL = 73;
  /** RegularExpression Id. */
  int JS_HEXADECIMAL = 74;
  /** RegularExpression Id. */
  int JS_BUILTIN = 75;
  /** RegularExpression Id. */
  int JS_FUNCTION_NAME = 76;
  /** RegularExpression Id. */
  int JS_SINGLE_COMMENT = 77;
  /** RegularExpression Id. */
  int JS_MULTI_COMMENT = 78;
  /** RegularExpression Id. */
  int JS_VARIABLE = 79;
  /** RegularExpression Id. */
  int JS_OPERATOR = 80;

  /** Lexical state. */
  int HTML_STATE = 0;
  /** Lexical state. */
  int HTML_TAG_STATE = 1;
  /** Lexical state. */
  int HTML_OPENING_TAG = 2;
  /** Lexical state. */
  int JS_STATE = 3;
  /** Lexical state. */
  int DEFAULT = 4;
  /** Lexical state. */
  int HTML_WITHIN_COMMENT = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"echo\"",
    "\"function\"",
    "\"return\"",
    "\"global\"",
    "\"new\"",
    "\"var\"",
    "\"class\"",
    "\"interface\"",
    "\"implements\"",
    "\"extends\"",
    "<ACCESS_MODIFIER>",
    "\"if\"",
    "\"else\"",
    "<STRING>",
    "<DECIMAL>",
    "<HEXADECIMAL>",
    "<PHP_BUILTIN>",
    "<PHP_FUNCTION_NAME>",
    "<PHP_SINGLE_COMMENT>",
    "<PHP_MULTI_COMMENT>",
    "<PHP_VARIABLE>",
    "<PHP_OPERATOR>",
    "\"?>\"",
    "\"<?php\"",
    "\"<script>\"",
    "\"</script>\"",
    "\"<\"",
    "\">\"",
    "\"</\"",
    "<HTML_TAG_NAME>",
    "<LETTER>",
    "<HTML_ATTRIBUTE_NAME>",
    "<HTML_STRING>",
    "\"=\"",
    "<HTML_TEXT_BLOCK>",
    "\"<!--\"",
    "\"-->\"",
    "<token of kind 58>",
    "\"function\"",
    "\"return\"",
    "\"new\"",
    "\"var\"",
    "\"if\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"=\"",
    "\",\"",
    "\"else\"",
    "<JS_STRING>",
    "<JS_DECIMAL>",
    "<JS_HEXADECIMAL>",
    "<JS_BUILTIN>",
    "<JS_FUNCTION_NAME>",
    "<JS_SINGLE_COMMENT>",
    "<JS_MULTI_COMMENT>",
    "<JS_VARIABLE>",
    "<JS_OPERATOR>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
  };

}
