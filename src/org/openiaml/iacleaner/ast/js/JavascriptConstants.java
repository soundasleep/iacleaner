/* Generated By:JJTree&JavaCC: Do not edit this line. JavascriptConstants.java */
package org.openiaml.iacleaner.ast.js;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavascriptConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int JS_FUNCTION_STATEMENT = 11;
  /** RegularExpression Id. */
  int JS_RETURN_STATEMENT = 12;
  /** RegularExpression Id. */
  int JS_NEW_STATEMENT = 13;
  /** RegularExpression Id. */
  int JS_VAR_STATEMENT = 14;
  /** RegularExpression Id. */
  int JS_IF_STATEMENT = 15;
  /** RegularExpression Id. */
  int JS_FOR_STATEMENT = 16;
  /** RegularExpression Id. */
  int JS_TRY_STATEMENT = 17;
  /** RegularExpression Id. */
  int JS_CATCH_STATEMENT = 18;
  /** RegularExpression Id. */
  int JS_THROW_STATEMENT = 19;
  /** RegularExpression Id. */
  int JS_FINALLY_STATEMENT = 20;
  /** RegularExpression Id. */
  int JS_BRACKET_OPEN = 21;
  /** RegularExpression Id. */
  int JS_BRACKET_CLOSE = 22;
  /** RegularExpression Id. */
  int JS_BRACE_OPEN = 23;
  /** RegularExpression Id. */
  int JS_BRACE_CLOSE = 24;
  /** RegularExpression Id. */
  int JS_ARRAY_OPEN = 25;
  /** RegularExpression Id. */
  int JS_ARRAY_CLOSE = 26;
  /** RegularExpression Id. */
  int JS_END = 27;
  /** RegularExpression Id. */
  int JS_COMMA = 28;
  /** RegularExpression Id. */
  int JS_ELSE_STATEMENT = 29;
  /** RegularExpression Id. */
  int JS_STRING = 30;
  /** RegularExpression Id. */
  int JS_STRING_SQ = 31;
  /** RegularExpression Id. */
  int JS_DECIMAL = 32;
  /** RegularExpression Id. */
  int JS_HEXADECIMAL = 33;
  /** RegularExpression Id. */
  int JS_BUILTIN = 34;
  /** RegularExpression Id. */
  int JS_OBJECT_OPERATOR = 35;
  /** RegularExpression Id. */
  int JS_PREFIX_OPERATOR = 36;
  /** RegularExpression Id. */
  int JS_NUMBER_OPERATOR = 37;
  /** RegularExpression Id. */
  int JS_OPERATOR = 38;
  /** RegularExpression Id. */
  int JS_ASSIGNMENT_OPERATOR = 39;
  /** RegularExpression Id. */
  int JS_OPERATOR_SINGLE = 40;
  /** RegularExpression Id. */
  int JS_EQUAL = 41;
  /** RegularExpression Id. */
  int JS_TERNARY_1 = 42;
  /** RegularExpression Id. */
  int JS_TERNARY_2 = 43;
  /** RegularExpression Id. */
  int JS_VARIABLE = 44;
  /** RegularExpression Id. */
  int JS_SCRIPT_END = 45;

  /** Lexical state. */
  int JS_STATE = 0;
  /** Lexical state. */
  int JS_WITHIN_COMMENT = 1;
  /** Lexical state. */
  int JS_WITHIN_COMMENT_SINGLE = 2;
  /** Lexical state. */
  int DEFAULT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "\"//\"",
    "\"*/\"",
    "<token of kind 8>",
    "<token of kind 9>",
    "<token of kind 10>",
    "\"function\"",
    "\"return\"",
    "\"new\"",
    "\"var\"",
    "\"if\"",
    "\"for\"",
    "\"try\"",
    "\"catch\"",
    "\"throw\"",
    "\"finally\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\"else\"",
    "<JS_STRING>",
    "<JS_STRING_SQ>",
    "<JS_DECIMAL>",
    "<JS_HEXADECIMAL>",
    "<JS_BUILTIN>",
    "\".\"",
    "\"!\"",
    "<JS_NUMBER_OPERATOR>",
    "<JS_OPERATOR>",
    "<JS_ASSIGNMENT_OPERATOR>",
    "<JS_OPERATOR_SINGLE>",
    "\"=\"",
    "\"?\"",
    "\":\"",
    "<JS_VARIABLE>",
    "\"</script>\"",
  };

}
